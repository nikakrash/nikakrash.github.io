{"version":3,"sources":["models/UsersStore.js","components/CreateUser.tsx","components/EditUser.tsx","components/UserRowItem.tsx","components/ListUsers.jsx","index.js"],"names":["usersStore","store","lst","localStorage","users","JSON","parse","length","forEach","e","addUserItem","usersDB","insertData","constructor","action","userItem","guid","uuidv4","this","push","saveLocal","deleteUserItem","userList","filter","item","idx","editUserItem","id","map","name","first","last","age","sortBy","field","sortedArray","sort","a","b","byField","replace","extendObservable","stringify","usersState","CreateUser","useState","name_first","name_last","state","setState","handleChange","target","value","className","htmlFor","type","onChange","data-validation","min","to","Button","variant","onClick","newObj","EditUser","props","firstNameInit","firstName","setFirstName","lastNameInit","lastName","setLastName","ageInit","setAge","userId","match","params","userID","useEffect","updateUser","find","el","index","Number","editedObj","UserRowItem","parseInt","key","onDeleted","ListUsers","observer","initialState","sortOrder","itemsList","reduce","acc","userIndex","slice","findIndex","concat","step","configure","enforceActions","Main","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.538fa7cd.chunk.js","sourcesContent":["/* eslint-disable default-case */\r\nimport { action, extendObservable } from 'mobx';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport usersDB from '../users.json';\r\n\r\nclass ObservableUsersStore {\r\n    constructor() {\r\n        extendObservable(this, {\r\n            users: [],\r\n            get usersState() {\r\n                return this.users;\r\n            },\r\n        });\r\n    }\r\n\r\n    saveLocal() {\r\n        const lst = typeof localStorage === 'undefined' ? {} : localStorage;\r\n\r\n        lst.users = JSON.stringify(this.usersState);\r\n    }\r\n\r\n    // Функция добавления\r\n    addUserItem = action('addUserItem', function(userItem) {\r\n        const guid = uuidv4();\r\n\r\n        this.users.push({ ...userItem, ...{ guid } });\r\n        this.saveLocal();\r\n    });\r\n\r\n    // Функция удаления\r\n    deleteUserItem = action('deleteUserItem', function(guid) {\r\n        const userList = this.users.filter((item, idx) => {\r\n            if (item.guid !== guid.guid) {\r\n                return item;\r\n            }\r\n        });\r\n\r\n        this.users = userList;\r\n        this.saveLocal();\r\n    });\r\n\r\n    // Функция редактирования\r\n    editUserItem = action('editUserItem', function(userItem, id) {\r\n        const userList = this.users.map((item, idx) => {\r\n            if (idx === id) {\r\n                item.name.first = userItem.name.first;\r\n                item.name.last = userItem.name.last;\r\n                item.age = userItem.age;\r\n            }\r\n\r\n            return item;\r\n        });\r\n\r\n        this.users = userList;\r\n        this.saveLocal();\r\n    });\r\n\r\n    // Функция сортировки\r\n    sortBy = action('sortBy', function(field) {\r\n        const byField = field => {\r\n            switch (field) {\r\n                case 'age': {\r\n                    return (a, b) => (a.age > b.age ? 1 : -1);\r\n                }\r\n                case 'first-name': {\r\n                    return (a, b) => (a.name.first > b.name.first ? 1 : -1);\r\n                }\r\n                case 'last-name': {\r\n                    return (a, b) => (a.name.last > b.name.last ? 1 : -1);\r\n                }\r\n                case 'index': {\r\n                    return (a, b) => (a > b ? 1 : -1);\r\n                }\r\n            }\r\n        };\r\n\r\n        const sortedArray = this.users.sort(byField(field));\r\n\r\n        this.users.replace(sortedArray);\r\n\r\n        this.saveLocal();\r\n    });\r\n}\r\n\r\nconst insertData = store => {\r\n    const lst = typeof localStorage === 'undefined' ? {} : localStorage;\r\n\r\n    if (!!lst.users && JSON.parse(lst.users).length > 0) {\r\n        JSON.parse(lst.users).forEach(e => store.addUserItem(e));\r\n    } else {\r\n        usersDB.forEach(e => store.addUserItem(e));\r\n    }\r\n\r\n    return store;\r\n};\r\n\r\nconst usersStore = insertData(new ObservableUsersStore());\r\n\r\nexport default usersStore;\r\n","import React, { useState } from 'react';\r\nimport usersStore from '../models/UsersStore';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport const CreateUser: React.FC = () => {\r\n    const initialState = { name_first: '', name_last: '', age: 0 };\r\n\r\n    const [state, setState] = useState(initialState);\r\n\r\n    const handleClick = () => {\r\n        const newObj = {\r\n            name: { first: state.name_first, last: state.name_last },\r\n            age: state.age,\r\n        };\r\n\r\n        usersStore.addUserItem(newObj);\r\n    };\r\n\r\n    const handleChange = (e: any) => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"createuser row\">\r\n            <div className=\"col-md-6 col-sm-12 col-lg-6 col-md-offset-3\">\r\n                <div className=\"panel panel-default\">\r\n                    <div className=\"panel-body\">\r\n                        <form name=\"myform\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"myName\">First Name *</label>\r\n                                <input\r\n                                    id=\"name_first\"\r\n                                    name=\"name_first\"\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    onChange={handleChange}\r\n                                    value={state.name_first}\r\n                                    data-validation=\"required\"\r\n                                />\r\n                                <span id=\"error_name\" className=\"text-danger\"></span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"lastname\">Last Name *</label>\r\n                                <input\r\n                                    id=\"name_last\"\r\n                                    name=\"name_last\"\r\n                                    className=\"form-control\"\r\n                                    onChange={handleChange}\r\n                                    value={state.name_last}\r\n                                    type=\"text\"\r\n                                    data-validation=\"email\"\r\n                                />\r\n                                <span id=\"error_lastname\" className=\"text-danger\"></span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"age\">Age *</label>\r\n                                <input\r\n                                    id=\"age\"\r\n                                    name=\"age\"\r\n                                    className=\"form-control\"\r\n                                    onChange={handleChange}\r\n                                    value={state.age}\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                />\r\n                                <span id=\"error_age\" className=\"text-danger\"></span>\r\n                            </div>\r\n                            <Link to=\"/\">\r\n                                <Button\r\n                                    variant=\"outline-success\"\r\n                                    id=\"submit\"\r\n                                    onClick={handleClick}\r\n                                >\r\n                                    Создать\r\n                                </Button>\r\n                            </Link>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState, FC, useEffect } from 'react';\r\nimport usersStore from '../models/UsersStore';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\ninterface EditUserProps {\r\n    firstNameInit: string;\r\n    lastNameInit: string;\r\n    ageInit: number;\r\n    match: any;\r\n    params: any;\r\n    userID: string;\r\n}\r\n\r\nexport const EditUser: FC<EditUserProps> = props => {\r\n    const [firstName, setFirstName] = useState(props.firstNameInit);\r\n    const [lastName, setLastName] = useState(props.lastNameInit);\r\n    const [age, setAge] = useState(props.ageInit);\r\n    const userId = +props.match.params.userID;\r\n\r\n    useEffect(() => {\r\n        const updateUser = usersStore.usersState.find(\r\n            (el: any, index: number) => userId === index,\r\n        );\r\n\r\n        setFirstName(updateUser.name.first);\r\n        setLastName(updateUser.name.last);\r\n        setAge(updateUser.age);\r\n    }, [userId]);\r\n\r\n    const handleClick = () => {\r\n        const editedObj = {\r\n            name: { first: firstName, last: lastName },\r\n            age,\r\n        };\r\n\r\n        usersStore.editUserItem(editedObj, userId);\r\n    };\r\n\r\n    return (\r\n        <div className=\"createuser row\">\r\n            <div className=\"col-md-6 col-sm-12 col-lg-6 col-md-offset-3\">\r\n                <div className=\"panel panel-default\">\r\n                    <div className=\"panel-body\">\r\n                        <form name=\"myform\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"myName\">First Name *</label>\r\n                                <input\r\n                                    id=\"name_first\"\r\n                                    name=\"name_first\"\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    onChange={e => setFirstName(e.target.value)}\r\n                                    value={firstName || ''}\r\n                                    data-validation=\"required\"\r\n                                />\r\n                                <span id=\"error_name\" className=\"text-danger\"></span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"lastname\">Last Name *</label>\r\n                                <input\r\n                                    id=\"name_last\"\r\n                                    name=\"name_last\"\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setLastName(e.target.value)}\r\n                                    value={lastName || ''}\r\n                                    type=\"text\"\r\n                                    data-validation=\"email\"\r\n                                />\r\n                                <span id=\"error_lastname\" className=\"text-danger\"></span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"age\">Age *</label>\r\n                                <input\r\n                                    id=\"age\"\r\n                                    name=\"age\"\r\n                                    className=\"form-control\"\r\n                                    onChange={e => setAge(Number(e.target.value))}\r\n                                    value={age || 0}\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                />\r\n                                <span id=\"error_age\" className=\"text-danger\"></span>\r\n                            </div>\r\n                            <Link to=\"/\">\r\n                                <Button\r\n                                    variant=\"outline-success\"\r\n                                    id=\"submit\"\r\n                                    onClick={handleClick}\r\n                                >\r\n                                    Сохранить\r\n                                </Button>\r\n                            </Link>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport usersStore from '../models/UsersStore';\r\n\r\nexport const UserRowItem: React.FC = (props: any) => {\r\n    const userID: number = parseInt(props.userID, 10);\r\n    const { guid, age, name } = props.value;\r\n    const onDeleted = (guid: any) => {\r\n        usersStore.deleteUserItem({ guid });\r\n    };\r\n\r\n    return (\r\n        <tr key={userID}>\r\n            <td key={`id_${guid}`}>{userID + 1}</td>\r\n            <td key={`nf_${guid}`}>{name.first}</td>\r\n            <td key={`nl_${guid}`}>{name.last}</td>\r\n            <td key={`age_${guid}`}>{age}</td>\r\n            <td key={`actoions_${guid}`}>\r\n                <span key={`actedit_${guid}`} className=\"actions\">\r\n                    <Link key={`lnk_ed_${guid}`} to={`/edit/${userID}`}>\r\n                        <Button variant=\"outline-secondary\">Edit</Button>\r\n                    </Link>\r\n                </span>\r\n                <span key={`actdelete_${guid}`} className=\"actions\">\r\n                    <Link to=\"/\" onClick={() => onDeleted(guid)}>\r\n                        <Button variant=\"outline-danger\">Del</Button>\r\n                    </Link>\r\n                </span>\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport usersStore from '../models/UsersStore';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserRowItem } from './UserRowItem';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport const ListUsers = observer(() => {\r\n    const initialState = {\r\n        firstName: '',\r\n        lastName: '',\r\n        age: 0,\r\n        sortOrder: 1,\r\n        users: usersStore.usersState,\r\n    };\r\n\r\n    const [state, setState] = useState(initialState);\r\n\r\n    const itemsList = initialState.users.reduce((acc, value, index) => {\r\n        const userIndex = usersStore.usersState.slice().findIndex((el, index) => {\r\n            return el.name.first === value.name.first && el.name.last === value.name.last;\r\n        });\r\n\r\n        return userIndex === -1\r\n            ? acc\r\n            : acc.concat([\r\n                  <UserRowItem\r\n                      key={`userItem_${index}`}\r\n                      value={value}\r\n                      userID={userIndex}\r\n                  />,\r\n              ]);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"userListDiv\">\r\n            <table className=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            <Button\r\n                                variant=\"outline-dark\"\r\n                                id=\"sort-index\"\r\n                                onClick={() => usersStore.sortBy('index')}\r\n                            >\r\n                                #\r\n                            </Button>\r\n                        </th>\r\n                        <th>\r\n                            <Button\r\n                                variant=\"outline-dark\"\r\n                                id=\"sort-first-name\"\r\n                                onClick={() => usersStore.sortBy('first-name')}\r\n                            >\r\n                                First Name\r\n                            </Button>\r\n                        </th>\r\n                        <th>\r\n                            <Button\r\n                                variant=\"outline-dark\"\r\n                                id=\"sort-last-name\"\r\n                                onClick={() => usersStore.sortBy('last-name')}\r\n                            >\r\n                                Last Name\r\n                            </Button>\r\n                        </th>\r\n                        <th>\r\n                            <Button\r\n                                variant=\"outline-dark\"\r\n                                id=\"sort-age\"\r\n                                onClick={() => usersStore.sortBy('age')}\r\n                            >\r\n                                Age\r\n                            </Button>\r\n                        </th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr key=\"tr_filter\">\r\n                        <td key=\"id_filter\">-</td>\r\n                        <td key=\"nf_input\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"firstName\"\r\n                                value={state.firstName}\r\n                                onChange={() => {}}\r\n                            ></input>\r\n                        </td>\r\n                        <td key=\"nl_input\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"lastName\"\r\n                                value={state.lastName}\r\n                                onChange={() => {}}\r\n                            ></input>\r\n                        </td>\r\n                        <td key=\"age_input\">\r\n                            <input\r\n                                type=\"number\"\r\n                                min=\"1\"\r\n                                step=\"1\"\r\n                                name=\"age\"\r\n                                value={state.age}\r\n                                onChange={() => {}}\r\n                            ></input>\r\n                        </td>\r\n                        <td key=\"actoions_input\">\r\n                            <span></span>\r\n                            <span></span>\r\n                        </td>\r\n                    </tr>\r\n                    {itemsList}\r\n                </tbody>\r\n            </table>\r\n            <Link to=\"/create\">\r\n                <Button variant=\"outline-dark\">Создать</Button>\r\n            </Link>\r\n        </div>\r\n    );\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { configure } from 'mobx';\r\nimport { CreateUser } from './components/CreateUser';\r\nimport { EditUser } from './components/EditUser';\r\nimport { ListUsers } from './components/ListUsers';\r\nimport './index.css';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconfigure({\r\n    enforceActions: 'observed',\r\n});\r\n\r\nconst Main = props => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={ListUsers} />\r\n            <Route path=\"/create\" component={CreateUser} />\r\n            <Route path=\"/edit/:userID\" component={EditUser} />\r\n            <Route component={ListUsers} />\r\n        </Switch>\r\n    );\r\n};\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <Main />\r\n    </Router>,\r\n    document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}