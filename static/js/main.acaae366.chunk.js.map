{"version":3,"sources":["models/UsersStore.js","components/CreateUser.tsx","components/EditUser.tsx","components/UserRowItem.tsx","components/ListUsers.jsx","index.js"],"names":["usersStore","store","lst","localStorage","users","JSON","parse","length","forEach","e","addUserItem","usersDB","insertData","constructor","action","userItem","guid","uuidv4","this","push","saveLocal","deleteUserItem","userList","filter","item","idx","editUserItem","id","map","name","first","name_first","last","name_last","age","sortBy","field","sortedArray","sort","a","b","byField","replace","extendObservable","stringify","usersState","CreateUser","useState","state","setState","handleChange","target","value","className","htmlFor","type","onChange","data-validation","min","to","Button","variant","onClick","newObj","EditUser","window","location","href","split","initialState","UserRowItem","props","userID","parseInt","key","onDeleted","ListUsers","observer","firstName","lastName","sortOrder","itemsList","slice","reduce","acc","index","userIndex","findIndex","el","concat","step","configure","enforceActions","Main","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.acaae366.chunk.js","sourcesContent":["import { action, extendObservable, computed } from 'mobx';\nimport { v4 as uuidv4 } from 'uuid';\nimport usersDB from '../users.json';\n\nclass ObservableUsersStore {\n    constructor() {\n        extendObservable(this, {\n            users: [],\n            get usersState() {\n                return this.users;\n            },\n        });\n    }\n\n    saveLocal() {\n        const lst = typeof localStorage === 'undefined' ? {} : localStorage;\n\n        lst.users = JSON.stringify(this.usersState);\n    }\n\n    // Пример функции добавления\n    addUserItem = action('addUserItem', function(userItem) {\n        const guid = uuidv4();\n\n        this.users.push({ ...userItem, ...{ guid } });\n        this.saveLocal();\n    });\n\n    // Функция удаления\n    deleteUserItem = action('deleteUserItem', function(guid) {\n        const userList = this.users.filter((item, idx) => {\n            if (item.guid !== guid.guid) {\n                return item;\n            }\n        });\n\n        this.users = userList;\n        this.saveLocal();\n    });\n\n    // Функция редактирования\n    editUserItem = action('editUserItem', function(userItem, id) {\n        const userList = this.users.map((item, idx) => {\n            if (idx == id) {\n                item.name.first = userItem.name_first;\n                item.name.last = userItem.name_last;\n                item.age = userItem.age;\n            }\n\n            return item;\n        });\n\n        this.users = userList;\n        this.saveLocal();\n    });\n\n    // Функция сортировки\n    sortBy = action('sortBy', function(field) {\n        const byField = (field) => {\n            switch (field) {\n                case 'age': {\n                    return (a, b) => a.age > b.age ? 1 : -1;\n                    break;\n                }\n                case 'first-name': {\n                    return (a, b) => a.name.first > b.name.first ? 1 : -1;\n                    break;\n                }\n                case 'last-name': {\n                    return (a, b) => a.name.last > b.name.last ? 1 : -1;\n                    break;\n                }\n            } \n        }\n\n        const sortedArray = this.users.sort(byField(field));\n        this.users.replace(sortedArray);\n\n        this.saveLocal();\n    });\n}\n\nconst insertData = store => {\n    const lst = typeof localStorage === 'undefined' ? {} : localStorage;\n\n    if (!!lst.users && JSON.parse(lst.users).length > 0) {\n        JSON.parse(lst.users).forEach(e => store.addUserItem(e));\n    } else {\n        usersDB.forEach(e => store.addUserItem(e));\n    }\n\n    return store;\n};\n\nconst usersStore = insertData(new ObservableUsersStore());\n\nexport default usersStore;\n","import React, { useState } from 'react';\r\nimport usersStore from '../models/UsersStore';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst CreateUser:React.FC = () => {\r\n    const initialState = { name_first: '', name_last: '', age: 0 };\r\n\r\n    const [state, setState] = useState(initialState);\r\n\r\n    const handleClick = (e:any) => {\r\n        const newObj = {\r\n            name: { first: state.name_first, last: state.name_last },\r\n            age: state.age,\r\n        };\r\n\r\n        usersStore.addUserItem(newObj);\r\n    };\r\n\r\n    const handleChange = (e:any) => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"createuser row\">\r\n            <div className=\"col-md-6 col-sm-12 col-lg-6 col-md-offset-3\">\r\n                <div className=\"panel panel-default\">\r\n                    <div className=\"panel-body\">\r\n                        <form name=\"myform\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"myName\">First Name *</label>\r\n                                <input\r\n                                    id=\"name_first\"\r\n                                    name=\"name_first\"\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    onChange={handleChange}\r\n                                    value={state.name_first}\r\n                                    data-validation=\"required\"\r\n                                />\r\n                                <span id=\"error_name\" className=\"text-danger\"></span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"lastname\">Last Name *</label>\r\n                                <input\r\n                                    id=\"name_last\"\r\n                                    name=\"name_last\"\r\n                                    className=\"form-control\"\r\n                                    onChange={handleChange}\r\n                                    value={state.name_last}\r\n                                    type=\"text\"\r\n                                    data-validation=\"email\"\r\n                                />\r\n                                <span id=\"error_lastname\" className=\"text-danger\"></span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"age\">Age *</label>\r\n                                <input\r\n                                    id=\"age\"\r\n                                    name=\"age\"\r\n                                    className=\"form-control\"\r\n                                    onChange={handleChange}\r\n                                    value={state.age}\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                />\r\n                                <span id=\"error_age\" className=\"text-danger\"></span>\r\n                            </div>\r\n                            <Link to=\"/\">\r\n                                <Button\r\n                                    variant=\"outline-success\"\r\n                                    id=\"submit\"\r\n                                    onClick={handleClick}\r\n                                >\r\n                                    Создать\r\n                                </Button>\r\n                            </Link>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateUser;\r\n","import React, { useState } from 'react';\r\nimport usersStore from '../models/UsersStore';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst EditUser:React.FC = () => {\r\n    function getUsername(url: string) {\r\n        const urlParts = url.split('edit/');\r\n        const userName = urlParts[1];\r\n\r\n        return userName;\r\n    }\r\n    \r\n    const id: string = getUsername(window.location.href);\r\n\r\n    const initialState = {\r\n        name_first: usersStore.users[id].name.first || ' ',\r\n        name_last: usersStore.users[id].name.last || ' ',\r\n        age: usersStore.users[id].age || ' ',\r\n    };\r\n\r\n    const [state, setState] = useState(initialState);\r\n\r\n    const handleClick = (e:any) => {\r\n        usersStore.editUserItem(state, id);\r\n    };\r\n\r\n    const handleChange = (e:any) => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"createuser row\">\r\n            <div className=\"col-md-6 col-sm-12 col-lg-6 col-md-offset-3\">\r\n                <div className=\"panel panel-default\">\r\n                    <div className=\"panel-body\">\r\n                        <form name=\"myform\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"myName\">First Name *</label>\r\n                                <input\r\n                                    id=\"name_first\"\r\n                                    name=\"name_first\"\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    onChange={handleChange}\r\n                                    value={state.name_first}\r\n                                    data-validation=\"required\"\r\n                                />\r\n                                <span id=\"error_name\" className=\"text-danger\"></span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"lastname\">Last Name *</label>\r\n                                <input\r\n                                    id=\"name_last\"\r\n                                    name=\"name_last\"\r\n                                    className=\"form-control\"\r\n                                    onChange={handleChange}\r\n                                    value={state.name_last}\r\n                                    type=\"text\"\r\n                                    data-validation=\"email\"\r\n                                />\r\n                                <span id=\"error_lastname\" className=\"text-danger\"></span>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"age\">Age *</label>\r\n                                <input\r\n                                    id=\"age\"\r\n                                    name=\"age\"\r\n                                    className=\"form-control\"\r\n                                    onChange={handleChange}\r\n                                    value={state.age}\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                />\r\n                                <span id=\"error_age\" className=\"text-danger\"></span>\r\n                            </div>\r\n                            <Link to=\"/\">\r\n                                <Button\r\n                                    variant=\"outline-success\"\r\n                                    id=\"submit\"\r\n                                    onClick={handleClick}\r\n                                >\r\n                                    Сохранить\r\n                                </Button>\r\n                            </Link>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditUser;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nimport usersStore from '../models/UsersStore';\r\n\r\nconst UserRowItem:React.FC = (props: any) => {\r\n    const userID:number = parseInt(props.userID, 10);\r\n    const { guid, age, name } = props.value;\r\n    const onDeleted = (guid: any) => {\r\n        usersStore.deleteUserItem({ guid });\r\n    };\r\n\r\n    return (\r\n        <tr key={userID}>\r\n            <td key={`id_${guid}`}>{userID + 1}</td>\r\n            <td key={`nf_${guid}`}>{name.first}</td>\r\n            <td key={`nl_${guid}`}>{name.last}</td>\r\n            <td key={`age_${guid}`}>{age}</td>\r\n            <td key={`actoions_${guid}`}>\r\n                <span key={`actedit_${guid}`} className=\"actions\">\r\n                    <Link key={`lnk_ed_${guid}`} to={`/edit/${userID}`}>\r\n                        <Button variant=\"outline-secondary\">Edit</Button>\r\n                    </Link>\r\n                </span>\r\n                <span key={`actdelete_${guid}`} className=\"actions\">\r\n                    <Link to=\"/\" onClick={() => onDeleted(guid)}>\r\n                        <Button variant=\"outline-danger\">Del</Button>\r\n                    </Link>\r\n                </span>\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\nexport default UserRowItem;\r\n","import React, { useState } from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport usersStore from '../models/UsersStore';\r\nimport { Link } from 'react-router-dom';\r\nimport UserRowItem from './UserRowItem';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst ListUsers = observer(() => {\r\n    const initialState = {\r\n        firstName: '',\r\n        lastName: '',\r\n        age: 0,\r\n        sortOrder: 1,\r\n        users: usersStore.usersState,\r\n    };\r\n\r\n    const [state, setState] = useState(initialState);\r\n\r\n    const itemsList = state.users.slice().reduce((acc, value, index) => {\r\n        const userIndex = usersStore.usersState.slice().findIndex((el, index) => {\r\n            return el.name.first === value.name.first && el.name.last === value.name.last;\r\n        });\r\n\r\n        return userIndex === -1\r\n            ? acc\r\n            : acc.concat([\r\n                  <UserRowItem\r\n                      key={`userItem_${index}`}\r\n                      value={value}\r\n                      userID={userIndex}\r\n                  />,\r\n              ]);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"userListDiv\">\r\n            <table className=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>\r\n                            <Button variant=\"outline-dark\" id=\"sort-index\">\r\n                                #\r\n                            </Button>\r\n                        </th>\r\n                        <th>\r\n                            <Button variant=\"outline-dark\" id=\"sort-first-name\" onClick={() => usersStore.sortBy('first-name')}>\r\n                                First Name\r\n                            </Button>\r\n                        </th>\r\n                        <th>\r\n                            <Button variant=\"outline-dark\" id=\"sort-last-name\" onClick={() => usersStore.sortBy('last-name')}>\r\n                                Last Name\r\n                            </Button>\r\n                        </th>\r\n                        <th>\r\n                            <Button variant=\"outline-dark\" id=\"sort-age\" onClick={() => usersStore.sortBy('age')}>\r\n                                Age\r\n                            </Button>\r\n                        </th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr key=\"tr_filter\">\r\n                        <td key=\"id_filter\">-</td>\r\n                        <td key=\"nf_input\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"firstName\"\r\n                                value={state.firstName}\r\n                                onChange={() => {}}\r\n                            ></input>\r\n                        </td>\r\n                        <td key=\"nl_input\">\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"lastName\"\r\n                                value={state.lastName}\r\n                                onChange={() => {}}\r\n                            ></input>\r\n                        </td>\r\n                        <td key=\"age_input\">\r\n                            <input\r\n                                type=\"number\"\r\n                                min=\"1\"\r\n                                step=\"1\"\r\n                                name=\"age\"\r\n                                value={state.age}\r\n                                onChange={() => {}}\r\n                            ></input>\r\n                        </td>\r\n                        <td key=\"actoions_input\">\r\n                            <span></span>\r\n                            <span></span>\r\n                        </td>\r\n                    </tr>\r\n                    {itemsList}\r\n                </tbody>\r\n            </table>\r\n            <Link to=\"/create\">\r\n                <Button variant=\"outline-dark\">Создать</Button>\r\n            </Link>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ListUsers;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { configure } from 'mobx';\r\nimport CreateUser from './components/CreateUser';\r\nimport EditUser from './components/EditUser';\r\nimport ListUsers from './components/ListUsers';\r\nimport './index.css';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconfigure({\r\n    enforceActions: 'observed',\r\n});\r\n\r\nconst Main = props => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/\" component={ListUsers} />\r\n            <Route path=\"/create\" component={CreateUser} />\r\n            <Route path=\"/edit/:userID\" component={EditUser} />\r\n            <Route component={ListUsers} />\r\n        </Switch>\r\n    );\r\n};\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <Main />\r\n    </Router>,\r\n    document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}